@inject IProductService ProductService
@inject ICategoryService CategoryService
@inject CartService CartService
@inject NavigationManager NavigationManager

<div class="d-flex flex-wrap justify-content-center" style="margin-top: 10px; width: 100%;">
    <form role="search"class="d-flex flex-wrap" style="width: 100%;">

        <div class="flex-fill">
            <input class="form-control me-2" type="search" @oninput="UpdateProductNameSearch" placeholder="Procurar produto por Nome" aria-label="Search">
        </div>
    </form>
</div>
 
@if (categories != null && products == null) 
{
    <div class="card-container">
        
        @foreach (var categorie in categories)
        {
            <div class="card-categories" @onclick="() => NavigateToCategorieProducts(categorie.Id)">
                <h2 >@categorie.Name</h2> 
            </div>
        }
        
    </div>
}
@if (products != null && products.Products != null)
{
    <div class="produtos d-flex justify-content-center flex-wrap" style="margin: 5px">

        @foreach (var product in products.Products)
        {

            <div>
                <div class="card" style=" margin: 5px; height: 300px; display: flex; flex-direction: column; justify-content: space-between;">
                    <img class="card-img" src="@product.PhotoUrl" alt="product-name" style="max-height: 180px;" @onclick="() => NavigateToProductPage(product.Id)">

                    <div class="card-body d-flex flex-column justify-content-between" @onclick="() => NavigateToProductPage(product.Id)">
                        <h4 class="card-title" style="font-size: 0.8rem;">
                            <a href="/produto/@product.Id">
                                @product.Name
                            </a>
                        </h4>

                        <div class="price text-center text-success">

                            @if (product.Variants.Count > 1)
                            {
                                <span>A partir de:</span>
                                <br />
                                <h5 class="mt-0 mb-0" style="font-size: 1.4rem">R$ @product.Variants.Min(v => v.Price)</h5>
                            }
                            else
                            {
                                <h5 class="mt-0 mb-0" style="font-size: 1.4rem">R$ @product.Variants.FirstOrDefault().Price</h5>
                            }
                        </div>
                    </div>
                </div>
            </div>

        }

    </div>

    <nav aria-label="Page navigation" class="d-flex justify-content-center" >
        <ul class="pagination">

            @for (int i = 1; i <= products.Pages; i++ )
            {
                var localVariable = i;

                <li class="page-item @(i == products.CurrentPage ? "active" : "")">
                    <a class="page-link" @onclick="() => ChangePage(localVariable)">@i</a>
                </li>
            }
        </ul>
    </nav>

}